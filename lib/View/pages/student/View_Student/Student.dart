import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:get/get_rx/src/rx_types/rx_types.dart';import '../../../../controler/model.dart';import '../../../../help/Colors.dart';import '../../../../help/text_style.dart';class View_Student extends StatefulWidget {  const View_Student({Key? key}) : super(key: key);  @override  State<View_Student> createState() => _View_StudentState();}class _View_StudentState extends State<View_Student> {  @override  static RxList StudentList = [].obs;  static RxBool post = false.obs;  static getStudent({required String stages}) async {    post.value = false;    CollectionReference Student =        FirebaseFirestore.instance.collection("Stage:${stages}");    StudentList = [].obs;    QuerySnapshot query =        await Student.get().whenComplete(() => {post.value = true});    StudentList = query.docs.obs;    StudentList.forEach((element) {      print("****************");      print(StudentList[0]["stage"]);    });  }  void initState() {    getStudent(stages: Stages.stagesUplode[3]); // TODO: implement initState  }  @override  Widget build(BuildContext context) {    return Stack(      children: [        Column(          children: [            Center(              child: Padding(                padding: const EdgeInsets.all(8.0),                child: Text(                  "الطلاب",                  style: Text_Style.getstyle(                      fontsize: MediaQuery.of(context).size.longestSide / 20,                      ColorText: Colorsapp.mainColor,                      fontWeight: FontWeight.w700),                ),              ),            ),            Obx(() {              return post.value == true                  ? Expanded(                      child: ListView.builder(                          itemCount: StudentList.length,                          scrollDirection: Axis.vertical,                          itemBuilder: (BuildContext context, int index) {                            return ListTile(                              title:                                  Text(StudentList[index]['email'].toString()),                              subtitle:                                  Text(StudentList[index]['stage'].toString()),                              minLeadingWidth: 5,                            );                          }))                  : CircularProgressIndicator();            })          ],        ),        Align(            alignment: Alignment.bottomCenter,            child: Padding(              padding: const EdgeInsets.all(15.0),              child: Container(                decoration: BoxDecoration(                  borderRadius: BorderRadius.circular(20),                  color: Colorsapp.mainColor.withOpacity(0.8),                ),                width: MediaQuery.of(context).size.longestSide > 1000                    ? MediaQuery.of(context).size.width / 2                    : MediaQuery.of(context).size.width / 1.2,                height: 60,                  child: Center(                    child: Row(                      mainAxisAlignment: MainAxisAlignment.center,                      children: [                      Stages_button(onPressed: () {  }, stage: Stages.stages[0],),                        Stages_button(onPressed: () {  }, stage: Stages.stages[0],),                        Stages_button(onPressed: () {  }, stage: Stages.stages[0],),                        Stages_button(onPressed: () {  }, stage: Stages.stages[0],),                      ],                    )                  ),              ),            ))      ],    );  }}class Stages_button extends StatelessWidget {  const Stages_button({    Key? key, required this.onPressed, required this.stage,  }) : super(key: key);  final void Function() onPressed;  final String stage;  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(8.0),    child: Container(    decoration: BoxDecoration(    borderRadius: BorderRadius.circular(15),    color: Colorsapp.mainColor.withOpacity(0.8),    ),    width: MediaQuery.of(context).size.longestSide > 1000    ? MediaQuery.of(context).size.width / 10        : MediaQuery.of(context).size.width / 6,    height: 45,    child: ElevatedButton(      style: ElevatedButton.styleFrom(        backgroundColor: Colorsapp.SecondColor,        elevation: 2,        shape: RoundedRectangleBorder(          borderRadius: BorderRadius.circular(15), // <-- Radius        ),      ),      onPressed: () {onPressed();  },    child: Text(stage,style: Text_Style.getstyle(fontsize: 20, ColorText: Colorsapp.White, fontWeight: FontWeight.w700),),),    ),    );  }}