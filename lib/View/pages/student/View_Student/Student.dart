import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:loading_animation_widget/loading_animation_widget.dart';import 'package:notificationsystem/controler/method.dart';import '../../../../controler/model.dart';import '../../../../help/Colors.dart';import '../../../../help/text_style.dart';class View_Student extends StatefulWidget {  const View_Student({Key? key}) : super(key: key);  @override  State<View_Student> createState() => _View_StudentState();}class _View_StudentState extends State<View_Student> {  @override  static RxList StudentList = [].obs;  static RxBool post = false.obs;  static String Arabicstage="";  static String Englishstage="";  static Color? color1;  static Color? color2;  static getStudent({required String stages}) async {    StudentList = [].obs;    print("*******11${post.value}*********");    post.value = true;    print("*******22${post.value}*********");    CollectionReference Student =        FirebaseFirestore.instance.collection("Student");    StudentList = [].obs;    QuerySnapshot query =        await Student.where('stage', isEqualTo: stages).get().whenComplete(() => {post.value = false});    StudentList = query.docs.obs;    StudentList.forEach((element) {      print("*******33${post.value}*********");    });  }  @override  void initState() {    super.initState();    Arabicstage =Stages.stages[0];    Englishstage=Stages.stagesUplode[0];    setState(() {});    color1 =Colorsapp.first1;    color2=Colorsapp.first2;    getStudent(stages: Stages.stagesUplode[0]);  }  @override  Widget build(BuildContext context) {    return Stack(      children: [        Column(          children: [            Padding(              padding: const EdgeInsets.all(8.0),              child: Center(child: Text(                " الطلاب المرحلة ${Arabicstage??""}",                style: Text_Style.getstyle(                    fontsize: MediaQuery.of(context).size.longestSide / 25,                    ColorText: Colorsapp.mainColor,                    fontWeight: FontWeight.w700),              )),            ),            Obx(               () {                return post.value==false? Obx(() {                  return StudentList.isNotEmpty                      ? Expanded(                          child: ListView.builder(                              itemCount: StudentList.length,                              scrollDirection: Axis.vertical,                              itemBuilder: (BuildContext context, int index) {                                return Column(                                  children: [                                  Padding(                                    padding: const EdgeInsets.only(top: 10,left: 10,right: 10),                                    child: Container(                                      decoration: BoxDecoration(                                        borderRadius: BorderRadius.circular(10),                                        color: color1,                                      ),                                        child: Row(                                      mainAxisAlignment: MainAxisAlignment.start,                                      children: [                                        Padding(                                          padding: const EdgeInsets.all(5),                                          child: Text(                                            "${index+1}- Name: ${StudentList[index]['name'].toString()}",                                          textDirection: TextDirection.ltr,                                          style: Text_Style.getstyle(                                              fontsize: MediaQuery.of(context).size.width / (MediaQuery.of(context).size.longestSide<1000?20:50),                                              ColorText: Colors.black,                                              fontWeight: FontWeight.w600),                                ),                                        ),                                      ],                                    )),                                  ),                                    Padding(                                      padding: const EdgeInsets.only(top: 10,left: 10,right: 10),                                      child: Container(                                          decoration: BoxDecoration(                                            borderRadius: BorderRadius.circular(10),                                            color: color2,                                          ),                                          child: Row(                                            mainAxisAlignment: MainAxisAlignment.spaceBetween,                                            children: [                                              Padding(                                                padding: const EdgeInsets.all(5),                                                child: Row(                                                  children: [                                                    SelectableText(                                                      "Email:",                                                      textDirection: TextDirection.ltr,                                                      style: Text_Style.getstyle(                                                          fontsize: MediaQuery.of(context).size.width / (MediaQuery.of(context).size.longestSide<1000?20:55),                                                          ColorText: Colors.black,                                                          fontWeight: FontWeight.w600),                                                    ),                                                    SelectableText(                                                      "${StudentList[index]['email'].toString()}",                                                      textDirection: TextDirection.ltr,                                                      style: Text_Style.getstyle(                                                          fontsize: MediaQuery.of(context).size.width / (MediaQuery.of(context).size.longestSide<1000?20:55),                                                          ColorText: Colors.blue,                                                          fontWeight: FontWeight.w400),                                                    ),                                                  ],                                                ),                                              ),                                              if(MediaQuery.of(context).size.longestSide>1000)                                                Padding(                                                  padding: const EdgeInsets.all(5),                                                  child: Container(                                                    width: MediaQuery.of(context).size.width /15,                                                    //height: MediaQuery.of(context).size.height / 13,                                                    decoration: BoxDecoration(                                                        color: Colors.red,                                                        borderRadius: BorderRadius.all(                                                          Radius.circular(15),                                                        ),                                                        border: Border.all(                                                            color: Colorsapp.mainColor, width: 2)),                                                    child: ElevatedButton(                                                      style: ElevatedButton.styleFrom(                                                        backgroundColor: Colors.red,                                                        shape: RoundedRectangleBorder(                                                            borderRadius: BorderRadius.circular(15)),                                                      ),                                                      onPressed: () async {                                                        print("Delete_Student");                                                          QuerySnapshot querySnapshot = await FirebaseFirestore.instance.collection("Student").where("email", isEqualTo: StudentList[index]['email'].toString(),).get();                                                          print(querySnapshot.docs);                                                            querySnapshot.docs.forEach((document) async {                                                              await document.reference.delete().whenComplete(() =>                                                                  StudentList.removeAt(index)                                                              ).then((value) =>Duration(seconds: 2));                                                            });                                                          print('Documents deleted successfully');                                                          Methods.showAlertDONE(context, "تم حذف الطالب");                                                      },                                                      child: Padding(                                                        padding: const EdgeInsets.only(top: 6),                                                        child: Text(                                                          "حذف",                                                          style: Text_Style.getstyle(                                                              fontsize: MediaQuery.of(context).size.width / 60,                                                              ColorText: Colorsapp.White,                                                              fontWeight: FontWeight.w700),                                                        ),                                                      ),),                                                  ),                                                ),                                            ],                                          )),                                    ),                                  ],                                );                              }))                      : Center(                        child: Column(                          children: [                            Image.asset("photo/No data-cuate.png",                  width: MediaQuery.of(context).size.width/1.2,                    height: MediaQuery.of(context).size.height/2,                  ),                            Center(child: Text(                              "لا يوجد طلاب",                              style: Text_Style.getstyle(                                  fontsize: MediaQuery.of(context).size.longestSide / 25,                                  ColorText: Colorsapp.mainColor,                                  fontWeight: FontWeight.w700),                            )),                          ],                        ),                      );                }):Padding(                  padding:  EdgeInsets.only(top: MediaQuery.of(context).size.height/4),                  child: LoadingAnimationWidget.flickr(                    size: 200,                    leftDotColor: Colorsapp.mainColor,                    rightDotColor: Colorsapp.SecondColor,                    //color: Colorsapp.mainColor,                  ),                );              }            )          ],        ),        Align(            alignment: Alignment.bottomCenter,            child: Padding(              padding: const EdgeInsets.all(15.0),              child: Container(                decoration: BoxDecoration(                  borderRadius: BorderRadius.circular(20),                  color: Colorsapp.mainColor.withOpacity(0.8),                ),                width: MediaQuery.of(context).size.longestSide > 1000                    ? MediaQuery.of(context).size.width / 2                    : MediaQuery.of(context).size.width / 1.2,                height: 60,                  child: Center(                    child: Row(                      mainAxisAlignment: MainAxisAlignment.center,                      children: [                      Stages_button(onPressed: () {                       Arabicstage =Stages.stages[0];                       Englishstage=Stages.stagesUplode[0];                       setState(() {});                       color1 =Colorsapp.first1;                       color2=Colorsapp.first2;                       getStudent(stages: Stages.stagesUplode[0]);                      }, stage: Stages.stages[0],),                        Stages_button(onPressed: () {                          Arabicstage =Stages.stages[1];                          Englishstage=Stages.stagesUplode[1];                          setState(() {});                          color1 =Colorsapp.second1;                          color2=Colorsapp.second2;                          getStudent(stages: Stages.stagesUplode[1]);                        }, stage: Stages.stages[1],),                        Stages_button(onPressed: () {                          Arabicstage =Stages.stages[2];                          Englishstage=Stages.stagesUplode[2];                          setState(() {});                          color1 =Colorsapp.third1;                          color2=Colorsapp.third2;                          getStudent(stages: Stages.stagesUplode[2]);                        }, stage: Stages.stages[2],),                        Stages_button(onPressed: () {                          Arabicstage =Stages.stages[3];                          Englishstage=Stages.stagesUplode[3];                          setState(() {});                          color1 =Colorsapp.forth1;                          color2=Colorsapp.forth2;                          getStudent(stages: Stages.stagesUplode[3]);                        }, stage: Stages.stages[3],),                      ],                    )                  ),              ),            ))      ],    );  }}class Stages_button extends StatelessWidget {  const Stages_button({    Key? key, required this.onPressed, required this.stage,  }) : super(key: key);  final void Function() onPressed;  final String stage;  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(8.0),    child: Container(    decoration: BoxDecoration(    borderRadius: BorderRadius.circular(15),    color: Colorsapp.mainColor.withOpacity(0.8),    ),    width: MediaQuery.of(context).size.longestSide > 1000    ? MediaQuery.of(context).size.width / 10        : MediaQuery.of(context).size.width / 6,    height: 45,    child: ElevatedButton(      style: ElevatedButton.styleFrom(        backgroundColor: Colorsapp.SecondColor,        elevation: 2,        shape: RoundedRectangleBorder(          borderRadius: BorderRadius.circular(15), // <-- Radius        ),      ),      onPressed: () {onPressed();  },    child: Padding(      padding: const EdgeInsets.only(top: 5),      child: Text(stage,style: Text_Style.getstyle(          fontsize: MediaQuery.of(context).size.width / (MediaQuery.of(context).size.longestSide<1000?30:55),          ColorText: Colorsapp.White, fontWeight: FontWeight.w700),),    ),),    ),    );  }}