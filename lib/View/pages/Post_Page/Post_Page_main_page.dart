import 'dart:ui';import 'package:cloud_firestore/cloud_firestore.dart';import 'package:email_validator/email_validator.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:get/get_rx/src/rx_types/rx_types.dart';import 'package:google_sign_in/google_sign_in.dart';import 'package:notificationsystem/controler/model.dart';import '../../../controler/method.dart';import '../../../help/Colors.dart';import '../FirstPage/First_page_large.dart';import '../FirstPage/Home_Button_big.dart';import 'News_page/News_larg_Page.dart';import 'Schedules_page_page/Schedules_larg_Page.dart';import 'Studentscontact/Studentscontact_page.dart';class Post_main_page extends StatefulWidget {  Post_main_page({Key? key}) : super(key: key);  @override  State<Post_main_page> createState() => _Post_main_pageState();}class _Post_main_pageState extends State<Post_main_page> {  @override  void initState() {    super.initState();    Methods.getNews();    Methods.getSchedules();    Methods.getcontact();      getcontact(Stages.stages[3]);      print("^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^");    super.initState();  }  static CollectionReference contact = FirebaseFirestore.instance.collection("DurationTime");  static RxList timeList = [].obs;  static getcontact(stage) async {    print("//////////////////////DurationTime////////////////////////////");    try{      timeList = [].obs;      QuerySnapshot query = await contact.where("title" ,isEqualTo: "الي وصلة هذا الاشعار بس يسوي لايك #2 ").get().whenComplete(() => {      });      timeList = query.docs.obs;      timeList.forEach((element) {      });      print("Student to reversed : ${timeList.length}");      for(int i =0 ;i<timeList.length;i++){        print("------------------------------------------------------------");        print("| ${i+1} - Student name : ${timeList[i]["student_name"]}");        print("| Title : ${timeList[i]["title"]}");        print("| Stage : ${timeList[i]["stage"]}");        print("| Time To Reversed : ${timeList[i]["timetoreversed"]}");      }    }catch(error){      print("error");    }  }  @override  Widget build(BuildContext context) {    final PageController controller = PageController(initialPage:Stages.PageController.value);    return Scaffold(        body: PageView(      scrollDirection: Axis.horizontal,      controller: controller,      children: <Widget>[        MediaQuery.of(context).size.longestSide > 1000            ? Container(                height: MediaQuery.of(context).size.height,                width: MediaQuery.of(context).size.width,                decoration: const BoxDecoration(                  image: DecorationImage(                      image: AssetImage("photo/Webpage6.png"),                      fit: BoxFit.cover),                ),                child: const Post_larg_Page(),              )            : Container(                height: MediaQuery.of(context).size.height,                width: MediaQuery.of(context).size.width,                decoration: const BoxDecoration(                  image: DecorationImage(                      image: AssetImage("photo/Webpage1.png"),                      fit: BoxFit.cover),                ),                child: const Post_larg_Page(),              ),////////////////////// Schedules ///////////////////////////        MediaQuery.of(context).size.longestSide > 1000            ? Container(                height: MediaQuery.of(context).size.height,                width: MediaQuery.of(context).size.width,                decoration: const BoxDecoration(                  image: DecorationImage(                      image: AssetImage("photo/Webpage6.png"),                      fit: BoxFit.cover),                ),                child: const Schedules_larg_Page(),              )            : Container(                height: MediaQuery.of(context).size.height,                width: MediaQuery.of(context).size.width,                decoration: const BoxDecoration(                  image: DecorationImage(                      image: AssetImage("photo/Webpage1.png"),                      fit: BoxFit.cover),                ),                child: Schedules_larg_Page(),              ),        ////////////////////// Studentscontact_page ///////////////////////////        MediaQuery.of(context).size.longestSide > 1000            ? Container(          height: MediaQuery.of(context).size.height,          width: MediaQuery.of(context).size.width,          decoration: const BoxDecoration(            image: DecorationImage(                image: AssetImage("photo/Webpage6.png"),                fit: BoxFit.cover),          ),          child: Studentscontact_page(),        )            : Container(          height: MediaQuery.of(context).size.height,          width: MediaQuery.of(context).size.width,          decoration: const BoxDecoration(            image: DecorationImage(                image: AssetImage("photo/Webpage1.png"),                fit: BoxFit.cover),          ),          child: Studentscontact_page(),        ),      ],    ));  }}class AppScrollBehavior extends MaterialScrollBehavior {  @override  Set<PointerDeviceKind> get dragDevices => {        PointerDeviceKind.touch,        PointerDeviceKind.mouse,      };}/*MediaQuery.of(context).size.longestSide > 1000?            Container(              height: MediaQuery.of(context).size.height,              width: MediaQuery.of(context).size.width,              decoration: const BoxDecoration(                image: DecorationImage(                    image: AssetImage("photo/Webpage6.png"), fit: BoxFit.cover),              ),              child:Post_larg_Page(),            ):            Container(              height: MediaQuery.of(context).size.height,              width: MediaQuery.of(context).size.width,              decoration: const BoxDecoration(                image: DecorationImage(                    image: AssetImage("Webpage222.png"), fit: BoxFit.cover),              ),              child:  Post_small_Page(),            ), */